// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Resources

model Province {
  id       Int      @id @default(autoincrement())
  name     String
  cities   City[]
  counties County[]
}

model City {
  id         Int       @id @default(autoincrement())
  name       String
  province   Province? @relation(fields: [provinceId], references: [id])
  provinceId Int?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  counties   County[]
}

model County {
  id         Int      @id @default(autoincrement())
  name       String
  province   Province @relation(fields: [provinceId], references: [id])
  provinceId Int
  city       City     @relation(fields: [cityId], references: [id])
  cityId     Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

// MainBiziness
model User {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  profile   Profile? @relation(fields: [profileId], references: [id])
  profileId Int?     @unique

  invitedByUserId Int?
  invitedByUser   User?  @relation("UserInvitation", fields: [invitedByUserId], references: [id])
  invitesUsers    User[] @relation("UserInvitation")
}

enum EnumUserSex {
  MAN
  WOMAN
  UNKNOWN
}

model Profile {
  id   Int         @id @default(autoincrement())
  name String?
  bio  String?
  sex  EnumUserSex @default(UNKNOWN)
  user User?
}

// System

model SysOption {
  id          BigInt   @id @default(autoincrement())
  name        String
  value       String
  description String   @default("")
  serial      Int      @default(100)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum EnumSysMenuType {
  MENU
  GROUP
  BUTTON
  LINK
  CUSTOM
}

model SysMenu {
  id          BigInt          @id @default(autoincrement())
  name        String          @unique
  type        EnumSysMenuType @default(MENU)
  serial      Int             @default(100)
  parentId    BigInt
  remark      String?
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  SysRoleMenu SysRoleMenu[]
}

model SysDept {
  id       BigInt @id @default(autoincrement())
  name     String @unique
  parentId BigInt
}

model SysUser {
  id             BigInt        @id @default(autoincrement())
  name           String        @unique
  mobile         String?       @unique
  passwordHashed String?
  salt           String?
  // 真实信息
  realname       String?
  avatar         String?
  birthday       DateTime?
  email          String?
  isDenied       Boolean       @default(false)
  // 职位相关
  deptId         BigInt?
  title          String?
  SysUserRole    SysUserRole[]
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model SysRole {
  id                BigInt              @id @default(autoincrement())
  name              String
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  SysUserRole       SysUserRole[]
  SysRolePermission SysRolePermission[]
  SysRoleMenu       SysRoleMenu[]
}

model SysUserRole {
  name      String
  user      SysUser  @relation(fields: [userId], references: [id])
  userId    BigInt
  role      SysRole  @relation(fields: [roleId], references: [id])
  roleId    BigInt
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([userId, roleId])
}

model SysPermission {
  id                BigInt              @id @default(autoincrement())
  name              String
  code              String
  action            String
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  SysRolePermission SysRolePermission[]
}

model SysRolePermission {
  id           BigInt        @id @default(autoincrement())
  role         SysRole       @relation(fields: [roleId], references: [id])
  roleId       BigInt
  permission   SysPermission @relation(fields: [permissionId], references: [id])
  permissionId BigInt
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model SysRoleMenu {
  id        BigInt   @id @default(autoincrement())
  role      SysRole  @relation(fields: [roleId], references: [id])
  roleId    BigInt
  menu      SysMenu  @relation(fields: [menuId], references: [id])
  menuId    BigInt
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
